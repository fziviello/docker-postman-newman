{
	"info": {
		"_postman_id": "9c763ba2-0fd6-4368-95dc-e9dae897fdde",
		"name": "spotify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "profile",
			"item": [
				{
					"name": "1 Get Current User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"const jsonData = pm.response.json(); \r",
									"var userId = jsonData.id; \r",
									"console.info(userId);\r",
									"\r",
									"pm.environment.set(\"userId\", userId);\r",
									"console.info(\"User Id is \" + userId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Get user (by User ID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "player",
			"item": [
				{
					"name": "Get user's available devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me/player/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"player",
								"devices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "3 search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"    pm.response.to.have.status(200);\r",
									"    const jsonData = pm.response.json();\r",
									"    var trackUri1 = jsonData.tracks.items[_.random(5)].uri;\r",
									"    var trackUri2 = jsonData.tracks.items[_.random(6, 10)].uri;\r",
									"    pm.expect(trackUri1).not.equal(null);\r",
									"    pm.expect(trackUri2).not.equal(null);\r",
									"    pm.environment.set(\"trackUri1\", trackUri1);\r",
									"    pm.environment.set(\"trackUri2\", trackUri2);\r",
									"    console.info(\"track 1 uri: \"  + trackUri1); \r",
									"    console.info(\"track 2 uri: \"  + trackUri2); \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search?q=africa&type=track",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "africa"
								},
								{
									"key": "type",
									"value": "track"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "playlist",
			"item": [
				{
					"name": "4 Create a new Playlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 OK\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    const JsonData = pm.response.json();\r",
									"    var playlistId = JsonData.id;\r",
									"    console.info (\"Playlist Id :\" + playlistId);\r",
									"    pm.expect(playlistId).not.equal(null);\r",
									"    if(playlistId != \"\") {\r",
									"    pm.environment.set(\"playlistId\", playlistId);\r",
									"    }\r",
									"    else {\r",
									"        console.error (\"Playlist Id non valido\");\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Postman Prova1\",\r\n  \"description\": \"Prova playlist 1\",\r\n  \"public\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/playlists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Add item to a playlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 OK\", function () { \r",
									"pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}/tracks?uris={{trackUri1}},{{trackUri2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}",
								"tracks"
							],
							"query": [
								{
									"key": "uris",
									"value": "{{trackUri1}},{{trackUri2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6 Reorder a playlist's item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"range_start\" : 1,\r\n  \"insert_before\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}/tracks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}",
								"tracks"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7 Replace a playlist's items (with Uris)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 OK\", function () { \r",
									"pm.response.to.have.status(201);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}/tracks?uris={{trackUri1}},{{trackUri2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}",
								"tracks"
							],
							"query": [
								{
									"key": "uris",
									"value": "{{trackUri1}},{{trackUri2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8 Get a playlist's items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"const jsonData = pm.response.json();\r",
									"var trackUri1 = jsonData.items[0].track.uri;\r",
									"var trackUri2 = jsonData.items[1].track.uri;\r",
									"console.info(\"track uri 1 : \" + trackUri1);\r",
									"console.info(\"track uri 2 : \" + trackUri2);\r",
									"pm.environment.set(\"trackUri1\", trackUri1);\r",
									"pm.environment.set(\"trackUri2\", trackUri2);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}/tracks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}",
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 Remove items from playlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"tracks\": [\r\n    {\r\n      \"uri\": \"{{trackUri1}}\",\r\n      \"positions\": [\r\n        0\r\n      ]\r\n    },\r\n    {\r\n      \"uri\" : \"{{trackUri2}}\",\r\n      \"positions\" : [\r\n          1\r\n      ]\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}/tracks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}",
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a List of Current User’s Playlists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    const JsonData = pm.response.json();\r",
									"    var playlistId = JsonData.items[0].id;\r",
									"    console.info (\"Playlist Id :\" + playlistId);\r",
									"    pm.expect(playlistId).not.equal(null);\r",
									"    if(playlistId != \"\") {\r",
									"    pm.environment.set(\"playlistId\", playlistId);\r",
									"    }\r",
									"    else {\r",
									"        console.error (\"Playlist Id non valido\");\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me/playlists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a List of User’s Playlists (by User ID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/playlists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change a playlist details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () { \r",
									"pm.response.to.have.status(200);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Updated Playlist Postman\",\r\n  \"description\": \"Updated playlist description\",\r\n  \"public\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change a cover image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202 OK\", function () { \r",
									"pm.response.to.have.status(202);  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "image/jpeg",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABkAGQDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAj/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFgEBAQEAAAAAAAAAAAAAAAAAAAkK/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8AvABJ9oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/9k="
						},
						"url": {
							"raw": "{{baseUrl}}/playlists/{{playlistId}}/images",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"{{playlistId}}",
								"images"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}